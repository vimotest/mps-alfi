### This file is downloaded from https://github.com/vimotest/mps-gradle-scripts/raw/main/.github/workflows/github-actions-release.yaml

name: Release Build

on:
  push:
    tags:
      - '*.*.*'

env:
  PROJECT_NAME: "alfi"
  LANGUAGE_NAME: "alfi"

jobs:
  call-build-workflow:
    uses: ./.github/workflows/workflow-build.yaml
  release:
    runs-on: ubuntu-latest
    needs: call-build-workflow
    steps:
      # Download Build Artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/artifacts/${{ env.PROJECT_NAME }}-build

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.extract_branch.outputs.branch }}
          body: |
            TODO: write changes in ${{ steps.extract_branch.outputs.branch }}
            Number: ${{ github.run_number }}
            Date: ${{ github.event.repository.updated_at}}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
          draft: true
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: build/artifacts/${{ env.PROJECT_NAME }}-build/${{ env.LANGUAGE_NAME }}.zip
          asset_name: ${{ env.LANGUAGE_NAME }}.zip
          asset_content_type: application/zip
