ext.mpsVersion = "2023.2"
ext.languageName = "alfi"

ext.alfVersion = "1.1.0k"

// here add your required plugins
// to find a plugin entry, search in https://plugins.jetbrains.com/ for the plugin name and obtain the ID from URL (e.g. 13242 for grammarcells)
// if you need a specific version for a plugin, add it in []-brackets
ext.mpsPlugins = [
    "LangDoc[2023.2]": 12325
]

ext.customMpsPlugins = [
    "de.itemis.mps.extensions": "https://artifacts.itemis.cloud/repository/maven-mps/de/itemis/mps/extensions/2023.2.2675.b35f4bc/extensions-2023.2.2675.b35f4bc.zip",
    "TextGenGen-Fum": "https://github.com/Fumapps/textGenGen/releases/download/2023.2-beta1/TextGenGen.zip"
]

apply from: 'gradle/init-gradle-scripts.gradle'

apply from: 'gradle/build-runtime-jars.gradle'
apply from: 'gradle/install-alf.gradle'
apply from: 'gradle/compitest.gradle'

task prepareMps {
    group 'mps'
    dependsOn 'buildOsSpecificBundle'
}

task patchBuildXml {
    String contents = new File( 'build.xml' ).getText( 'UTF-8' )
    contents = contents.replaceAll( '\\{build.tmp}/deps/CsStdLibrary/CsStdLibrary.zip', '{artifacts.CsStdLibrary}' )
    contents = contents.replaceAll( '\\{build.tmp}/deps/LangDoc/LangDoc.zip', '{artifacts.LangDoc}' )
    new File( 'build.xml' ).write( contents, 'UTF-8' )
}

task mpsBuild {
    group 'mps'
    dependsOn 'mpsAntGenerate', 'mpsAntBuild', 'packageStandardModelLibrary', 'patchBuildXml'
}
mpsAntBuild.dependsOn mpsAntGenerate
mpsAntGenerate.dependsOn packageStandardModelLibrary


task mpsClean {
    group 'mps'
    dependsOn 'mpsAntClean', 'mpsAntCleanSources', 'cleanStandardModelLibraryJar'
}

task mpsTest {
    group 'mps'
    dependsOn 'mpsAntCheck', 'parseTestReportAfterAntCheck'
}

task openProjectInMps {
    group 'mps'
    dependsOn 'mpsOpenProjectInMpsForCurrentOs'
}

task buildAndOpenProjectInMps {
    group 'mps'
    dependsOn mpsBuild, openProjectInMps
}

task compiTest {
    dependsOn 'mpsBuild', 'compitestRunTests'
}
compitestRunTests.configure {
    mustRunAfter mpsBuild
}
